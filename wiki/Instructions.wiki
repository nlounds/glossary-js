#summary Information about how to use the tool

== The Files ==
You need to put jquery.js then glossary.js in your page, in that order.  Then define any variables AFTER those scripts.

  * *jquery.js* - jQuery is a fast and concise JavaScript Library that simplifies HTML document traversing, event handling, animating, and Ajax interactions for rapid web development.  http://jquery.com
  * *glossary.css* - contains the styles used by glossary.js to control the appearance of the glossary terms. You can use your own CSS to override the ones defined here. 
  * *glossary.txt* - your list of terms with definitions. Each term must be on its own line. Your definitions can contain valid HTML, but NO extra line breaks. I suggest that you keep your terms in alphabetical order.
  * *glossary.js* - parses the document and looks for elements with class="glossary" or class="highlightSpan" and makes them interactive.  Also loads content from glossary.txt in the element with the id="GlossaryJS"
  * *glossary.min.js* - compressed version of glossary.js for quicker downloads.

== The Variables ==
*var GlossaryJS_css* - this is the path to glossary.css.  By default the script will look for it in the same folder as the web page calling it.

*var GlossaryJS_txt* - this is the path to glossary.txt.  By default the script will look for it in the same folder as the web page calling it.

*var GlossaryJS_section* - use this variable to have more than one definition for the same term.  The script will use the one from the glossary whose section matches this value.


== Sample HTML ==

{{{

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Glossary Test</title>
<script type="text/javascript" src="/path_to_your_glossary_files/jquery.js"></script>
<script type="text/javascript" src="/path_to_your_glossary_files/glossary.min.js"></script>
<script type="text/javascript">
var GlossaryJS_css = "/path_to_your_glossary_files/glossary.css";
var GlossaryJS_txt = "/path_to_your_glossary_files/glossary.txt";
var GlossaryJS_section = "Section 1";  
</script>
</head>
<body>
<h1>Glossary-JS</h1>
<h2>Example Terms</h2>
<p>This is a tool we've developed to allow <span class="highlightSpan">ANGEL</span> course developers to create a glossary of terms and tag instances of those terms in the
 course content.  Then when users mouse over terms the glossary definition of the term 
will be displayed.  This tool uses <span class="highlightSpan">JavaScript</span>, <span 
class="highlightSpan">AJAX</span> and <span class="highlightSpan">CSS</span> to make the 
content interactive.  Mouse over the terms in the previous sentence to see this tool in 
action.</p>

<p>This tool does not require a database.  Though it is designed for use in the <span 
class="highlightSpan">ANGEL</span> <span class="highlightSpan">LMS</span>, it could be 
used in any web site.</p>

<h2>Example of Entire Glossary</h2>
<div id="GlossaryJS"></div>
</body>
</html>

}}}